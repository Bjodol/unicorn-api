import Head from "next/head";
import Highlight, { defaultProps } from "prism-react-renderer";
import { useState } from "react";
import axios from "axios";

const code = `
export type UnicornColor = {
  pathId: string;
  color: string;
};

export type Unicorn = {
  _id?: ObjectId;
  nickname: string;
  createdAt?: string;
  phoneNo: string;
  colors: UnicornColor[];
  equipment: string;
};`;

const testData = {
  nickname: "unicorn",
  phoneNo: "123 123 38",
  colors: [
    {
      pathId: "path-1",
      color: "#f0f",
    },
  ],
  equipment: "wand",
};

const Code: React.FC<{ code: string }> = ({ code }) => (
  <Highlight {...defaultProps} code={code} language="tsx">
    {({ className, style, tokens, getLineProps, getTokenProps }) => (
      <pre className={className} style={{ ...style, padding: "1rem" }}>
        {tokens.map((line, i) => (
          // eslint-disable-next-line react/jsx-key
          <div {...getLineProps({ line, key: i })}>
            {line.map((token, key) => (
              // eslint-disable-next-line react/jsx-key
              <span {...getTokenProps({ token, key })} />
            ))}
          </div>
        ))}
      </pre>
    )}
  </Highlight>
);

export default function Home() {
  const [results, setResults] = useState({ get: null, post: null });
  return (
    <div>
      <Head>
        <title>Unicorn creator api</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="sm:max-w-6xl sm:flex justify-center flex-wrap sm:space-y-4 sm:p-4 w-full">
        <h1 className="text-4xl">Welcome to Unicorn Creator API</h1>
        <section className="w-full space-y-4">
          <h2 className="text-2xl">Types</h2>
          <Code code={code} />
        </section>
        <section className="w-full space-y-4">
          <h2 className="text-2xl">API</h2>
          <div>
            <code>GET /api/unicorns</code>
            <button
              className="px-4 h-full ml-4 bg-gray-300 rounded"
              onClick={async () => {
                const { data } = await axios.get("/api/unicorns");
                setResults({ ...results, get: data });
              }}
            >
              Test
            </button>
            {results.get && (
              <div className="w-full my-4">
                <h3>Results</h3>
                <Code code={JSON.stringify(results.get, null, 2)} />
              </div>
            )}
          </div>
          <div>
            <code>POST /api/unicorns</code>
            <button
              className="px-4 h-full ml-4 bg-gray-300 rounded"
              onClick={async () => {
                const { data } = await axios.post("/api/unicorns", testData);
                setResults({ ...results, post: data });
              }}
            >
              Test
            </button>
            <div className="w-full my-4">
              <Code code={JSON.stringify(testData, null, 2)} />
              {results.post && (
                <div className="w-full my-4">
                  <h3>Results</h3>
                  <Code code={JSON.stringify(results.post, null, 2)} />
                </div>
              )}
            </div>
          </div>
        </section>
      </main>
    </div>
  );
}
